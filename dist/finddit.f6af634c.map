{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","console","log","err","searchForm","document","getElementById","searchInput","addEventListener","value","querySelector","showMessage","reddit","output","results","forEach","image","post","preview","images","source","url","title","truncateText","selftext","subreddit","score","innerHTML","e","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"finddit.f6af634c.map","sourceRoot":"..","sourcesContent":["export default {\r\n    search: function(searchTerm, searchLimit, sortBy) {\r\n        return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\r\n        .then(res => res.json())\r\n        .then(data => data.data.children.map(data => data.data))\r\n        .catch(err => console.log(err));\r\n    }\r\n};","import reddit from './redditapi';\r\n\r\nconst searchForm = document.getElementById('search-form');\r\nconst searchInput = document.getElementById('search-input');\r\n\r\nsearchForm.addEventListener('submit', e => {\r\n    // Get search term\r\n    const searchTerm = searchInput.value;\r\n    // Get sort\r\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n    // Get limit\r\n    const searchLimit = document.getElementById('limit').value;\r\n    // Check input\r\n    if (searchTerm === '') {\r\n        // Show message\r\n        showMessage('Please add a search term', 'alert-danger');\r\n    }\r\n\r\n    // Clear input\r\n    searchInput.value = '';\r\n\r\n    // Search Reddit\r\n    reddit.search(searchTerm, searchLimit, sortBy)\r\n        .then(results => {\r\n            let output = '<div class=\"card-columns\">';\r\n            // Loop through posts\r\n            results.forEach(post => {\r\n                // Check for image\r\n                const image = post.preview ? post.preview.images[0].source.url : 'https://cdn.vox-cdn.com/thumbor/QPV9DP3CTNEjFQL2uHkFrm_oyIE=/0x0:640x427/920x613/filters:focal(269x163:371x265):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/59028817/reddit_logo_640.0.jpg';\r\n\r\n                output += `\r\n                    <div class=\"card\" style=\"width: 18rem\">\r\n                        <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">${post.title}</h5>\r\n                            <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n                            <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\r\n                            <hr />\r\n                            <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\r\n                            <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            });\r\n            output +=  '</div>';\r\n\r\n            document.getElementById('results').innerHTML = output;\r\n        });\r\n\r\n    e.preventDefault();\r\n});\r\n\r\n// Show message\r\nfunction showMessage(message, className) {\r\n    // Create div\r\n    const div = document.createElement('div');\r\n    // Add classes\r\n    div.className = `alert ${className}`;\r\n    // Add text\r\n    div.appendChild(document.createTextNode(message));\r\n    // Get parent\r\n    const searchContainer = document.getElementById('search-container');\r\n    // Get search\r\n    const search = document.getElementById('search');\r\n\r\n    // Insert message\r\n    searchContainer.insertBefore(div, search);\r\n\r\n    // Timeout alert\r\n    setTimeout(() => document.querySelector('.alert').remove(), 3000);\r\n}\r\n\r\n// Truncate Text\r\nfunction truncateText(text, limit) {\r\n    const shortened = text.indexOf(' ', limit);\r\n    if (shortened == -1) return text;\r\n    return text.substring(0, shortened);\r\n}"]}